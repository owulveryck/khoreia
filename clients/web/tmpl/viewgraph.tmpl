{{define "content"}}
          <!-- /.box -->
      <div class="box box-primary">
        <div class="box-header with-border">
          <h3 class="box-title">Graphical view</h3>

          <div class="box-tools pull-right">
            <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip" title="Collapse">
              <i class="fa fa-minus"></i></button>
            <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
              <i class="fa fa-times"></i></button>
          </div>
        </div>
        <div class="box-body">
                <div class="embed-responsive embed-responsive-16by9">
                    <object class="embed-responsive-item" data="/graph/{{.ID}}.svg" type="image/svg+xml" id="graphSVG">Please provide an ID</object>
                </div>
        </div>
        <!-- /.box-body -->
        <div class="box-footer">
            Color codes:
            <span class="label label-default">Initial state</span>
            <span class="label label-primary">To run</span>
            <span class="label label-info">Running</span>
            <span class="label label-success">Success</span>
            <span class="label label-warning">Not runnable</span>
            <span class="label label-danger">Failure</span>
        </div>
        <!-- /.box-footer-->
      </div>
      <!-- /.box -->
      <!-- Default box -->
      <div class="box box-success">
        <div class="box-header with-border">
          <h3 class="box-title">Table view</h3>

          <div class="box-tools pull-right">
            <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip" title="Collapse">
              <i class="fa fa-minus"></i></button>
            <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
              <i class="fa fa-times"></i></button>
          </div>
        </div>
        <div class="box-body">
          <div class="table-responsive">
                    <table class="table table-condensed" id="execTable">
                        <tbody>
                            <th>Action</th><th>Target</th><th>Engine</th><th>Artifact</th><th>Inputs</th><th>Outputs</th><th>State</th>
                            {{range .Nodes}}
                            <tr id="{{.ID}}">
                                <td id="name">{{.Name}}</td>
                                <td>{{.Target}}</td>
                                <td>{{.Engine}}</td>
                                <td>{{.Artifact}}</td>
                                <td>
                                    {{range .Args}}
                                        {{.}}<br/>
                                    {{end}}
                                </td>
                                <td id="outputs_{{.ID}}">
                                    {{range .Outputs}}
                                        <span id="output_{{.}}">{{.}}</span><br/>
                                    {{end}}
                                </td>
                                <td><span class="label label-success" id="state{{.ID}}">{{.State}}</span></td>
                            </tr>
                            {{end}}
                        </tbody>
                    </table>
                </div>
        </div>
        <!-- /.box-body -->
        <div class="box-footer">
          Footer
        </div>
        <!-- /.box-footer-->
      </div>

    <!-- Bootstrap core JavaScript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <!-- update the color -->
    <script src="/dist/js/jquery.min.js"></script>
    <script type="text/javascript">
        function updateGraph(svgRoot,execTable) {
            $.getJSON( "{{.Update}}", function() {
                //console.log( "success!" );
                }).done(function(data) {
                    for (var i in data.nodes){
                        //console.log(data.nodes[i].state);
                        //Initial     = 0
                        //ToRun       = 1
                        //Running     = 2
                        //Success     = 3
                        //Failure     = 4
                        //NotRunnable = 5
                        //Timeout     = 10
                        //Canceled    = 11

                        switch (data.nodes[i].state) {
                            case 0:
                                color = '#95a5a6'
                                $("#state" + data.nodes[i].id,execTable).text("Initial").removeClass().addClass("label").addClass("label-default");
                                break;
                            case 1:
                                color = '#428bca'
                                $("#state" + data.nodes[i].id,execTable).text("ToRun").removeClass().addClass("label").addClass("label-primary");
                                break;
                            case 2:
                                color = '#5bc0de'
                                $("#state" + data.nodes[i].id,execTable).text("Running").removeClass().addClass("label").addClass("label-info");
                                break;
                            case 3:
                                color = '#2ecc71'
                                $("#state" + data.nodes[i].id,execTable).text("Success").removeClass().addClass("label").addClass("label-success");
                                break;
                            case 4:
                                color = '#e74c3c'
                                $("#state" + data.nodes[i].id,execTable).text("Failure").removeClass().addClass("label").addClass("label-danger");
                                break;
                            case 5:
                                color = '#f89406'
                                $("#state" + data.nodes[i].id,execTable).text("Not Runnable").removeClass().addClass("label").addClass("label-warning");
                                break;
                            default:
                                color = 'rgba(230, 0, 0, 0.3)'
                                $("#state" + data.nodes[i].id,execTable).text("Idle").removeClass().addClass("label").addClass("label-warning");
                        }
                        //$("#" + data.nodes[i].id,svgRoot).children("text").css({'fill': color});
                        $("#" + data.nodes[i].id,svgRoot).children("path").css({'fill': color});
                        //$("#" + data.nodes[i].id,execTable).css({'background-color': color});

                        //$("#" + data.nodes[i].id,execTable).children("td").css({'background-color':'green'}) ;
                        //$("#" + data[i].id,svgRoot).children("polygon").css({'fill': color});
                    }
                });
                    setTimeout(function() {
                            updateGraph(svgRoot);
                    }, 2000)
        }
        $(document).ready(function(){
            var a = document.getElementById("graphSVG");

            // Some help from http://stackoverflow.com/questions/6793312/how-to-use-jquery-in-svg-scalable-vector-graphics
            //it's important to add an load event listener to the object, as it will load the svg doc asynchronously
            a.addEventListener("load",function(){
                var svgDoc = a.contentDocument; //get the inner DOM of alpha.svg
                var svgRoot  = svgDoc.documentElement;
                updateGraph(svgRoot,execTable);
                //now we can query stuff with jquery like this
                //note that we pass in the svgRoot as the context node!
            },false);
        })
    </script>
    <!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->    <!--<script src="../../assets/js/ie10-viewport-bug-workaround.js"></script>-->
{{end}}
      
